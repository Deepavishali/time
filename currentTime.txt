import React, { useState, useEffect } from 'react';

const CurrentTime = () => {
  const [timeData, setTimeData] = useState(null);
  const [location, setLocation] = useState({
    latitude: null,
    longitude: null,
    error: ''
  });

  // Function to fetch the time from the API
  const fetchTimeData = async (latitude, longitude) => {
    try {
      const response = await fetch(
        `https://timeapi.io/api/time/current/coordinate?latitude=${latitude}&longitude=${longitude}`
      );
      const data = await response.json();
      setTimeData(data);
    } catch (error) {
      console.error('Error fetching time data:', error);
    }
  };

  useEffect(() => {
    // Get user's geolocation and fetch time data
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const { latitude, longitude } = position.coords;
          setLocation({ latitude, longitude, error: '' });
          fetchTimeData(latitude, longitude); // Fetch time once using real-time location

          // Update time every second
          const intervalId = setInterval(() => {
            fetchTimeData(latitude, longitude); // Fetch new time every second
          }, 1000);

          return () => clearInterval(intervalId); // Clear interval when component unmounts
        },
        (error) => {
          setLocation({ ...location, error: error.message });
        }
      );
    } else {
      setLocation({ ...location, error: 'Geolocation is not supported by your browser.' });
    }
  }, []);

  if (!timeData) {
    return <div>Loading...</div>;
  }

  return (
    <div style={{ textAlign: 'center', marginTop: '50px' }}>
      <h1>Current Time & Location</h1>
      <p><strong>Time:</strong> {`${timeData.hour}:${timeData.minute}:${timeData.seconds}`}</p>
      <p><strong>Location:</strong> {timeData.timeZone}</p>
    </div>
  );
};

export default CurrentTime;
